-- Eliminar vistas resumen
DROP VIEW
IF EXISTS cortes_transversales.v_cortes_resumen_para_geoalert;

DROP VIEW
IF EXISTS cortes_transversales.v_cortes_resumen;

-- Crear visat resumen (con varios geom)
CREATE VIEW cortes_transversales.v_cortes_resumen AS (
	SELECT
-- Definir tipo de dato para manipularlo dentro de la plataforma
		'corte_transversal' as tipo_dato,
		t2.id_corte,
		t2.nombre_corte,
-- Calcular geom del corte como conjunto de lineas
		st_transform(st_union (t2.geom_corte_polyline,t2.geom_linea_polyline),1000) geom_conjunto_polyline,
-- Calcular geom del corte como un s√≥lo poligono
		st_transform(t2.geom_corte_poligono,1000) geom_corte_poligono,
-- Calcular distancia (largo) del corte
		st_distance ((st_startpoint(t2.geom_linea) :: geography), (st_endpoint(t2.geom_linea) :: geography)) AS largo,
-- Calcular numero de cortes_segmentos
		t2.nro_cortes nro_cortes,
-- Calcula el ancho del corte
		t2.ancho_corte,
-- Calcular largo de cada segmento
		(st_distance ((st_startpoint(t2.geom_linea) :: geography), (st_endpoint(t2.geom_linea) :: geography)))/t2.nro_cortes largo_segmento--,
-- Calcular variables agregadas de la interseccion del poligono asociado al corte con el esqueesar
		--(fn_intersecta_squeesar_resumen(st_astext(st_transform(t2.geom_corte_poligono,1000)))).*
	FROM
		(
			SELECT
				t1.id_corte,
				t1.nombre_corte,
				t1.geom_linea,
				st_collect (t1.geom_segmento_polyline) geom_corte_polyline,
				st_collect (t1.geom_linea) geom_linea_polyline,
				st_union (t1.geom_segmento) geom_corte_poligono,
				MAX(t1.nro_cortes) nro_cortes,
				MAX(t1.ancho_corte) ancho_corte
			FROM
				"cortes_transversales"."v_cortes_segmentos" t1
			GROUP BY
				t1.id_corte,
				t1.nombre_corte,
				t1.geom_linea
		) t2
);

-- Crea vista resumen con un solo geom para la plataforma
CREATE VIEW "cortes_transversales"."v_cortes_resumen_para_geoalert" AS (
	SELECT
		t1.tipo_dato,
		t1.id_corte,
		t1.nombre_corte,
		t1.geom_conjunto_polyline,
		round(t1.largo::numeric,3) largo,
		t1.nro_cortes,
		round(t1.ancho_corte::numeric,3) ancho_corte--,
		--t1.cantidad_puntos cantidad_puntos_squeesar,
-- Redondear valores numericos a 3 decimales para su visualizacion en la plataforma
		--round(t1.vel_mean::numeric,3) vel_mean,
		--round(t1.acc_mean::numeric,3) acc_mean,
		--round(t1.coherence_mean::numeric,3) coherence_mean
	FROM
		"cortes_transversales"."v_cortes_resumen" t1
);